require("dotenv").config();
const { Bot, GrammyError, HttpError, Keyboard} = require("grammy");

const bot = new Bot(process.env.APY_KEY_BOT);

bot.api.setMyCommands([
  {
    command: "start",
    description: "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞!",
  },
  {
    command: "sayhi",
    description:
      "–ü—Ä–∏–≤–µ—Ç, –ø—Ä–∏–≤–µ—Ç! –¢—ã –∫—Å—Ç–∞—Ç–∏ –≤ –∫—É—Ä—Å–µ, —á—Ç–æ –ø–æ–∫–∞ —Ç—ã —Å–æ –º–Ω–æ–π –∑–¥–æ—Ä–æ–≤–∞–ª—Å—è –Ω–∞ –ó–µ–º–ª–µ –æ—Ç –∫—É—Ä–µ–Ω–∏—è —É–º–µ—Ä 1 —á–µ–ª–æ–≤–µ–∫?! –ù–µ—Ç?! –ù—É –ø—Ä–∏–≤–µ—Ç!",
  },
]);

bot.command(["smoke", "stop"], async (ctx) => {
  await ctx.reply(
    "–≠—Ç–æ —Å—Å—ã–ª–∫–∞ –¥–∞–µ—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑—É—á–∏—Ç—å –≤—Ä–µ–¥ –æ—Ç –∫—É—Ä–µ–Ω–∏—è <span class='tg-spoiler'>–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</span> <a>https://www.who.int/ru/campaigns/connecting-the-world-to-combat-coronavirus/healthyathome/healthyathome---quitting-tobacco</a>",
    {
      parse_mode: "HTML",
    }
  )
});

bot.command("link", async (ctx) => {
  await ctx.react("ü§ì")
  await ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç, —è –∑–¥–µ—Å—å —á—Ç–æ–±—ã –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å –∏ –∫—É–ø–∏—Ç—å –Ω–µ–±–æ—Å–∫—Ä–µ–±\\! –¢–≥ –∫–∞–Ω–∞–ª —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏: [—ç—Ç–æ —Å—Å—ã–ª–∫–∞](https://t.me/dlaj_druzej)",
    {
      parse_mode: "MarkdownV2",
      disable_web_page_preview: true,
    }
  );
});

bot.command('mood', async(ctx) => {
  const moodKeyBoard = new Keyboard().text('–•–æ—Ä–æ—à–æ –±—ã –±—Ä–æ—Å–∏—Ç—å –∫—É—Ä–∏—Ç—å!').row().text('–•–æ—á—É –ø–æ–Ω—è—Ç—å –≤—Ä–µ–¥ –∫—É—Ä–µ–Ω–∏—è!').row().text('–ü–æ –ø—Ä–∏–∫–æ–ª—É –ø—Ä–æ—Å—Ç–æ!').resized().oneTime()
  await ctx.reply('–ó–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–æ—Ç –±–æ—Ç?', {
    reply_markup: moodKeyBoard
  })
})

bot.hears('–•–æ—Ä–æ—à–æ –±—ã –±—Ä–æ—Å–∏—Ç—å!', async (ctx) => {
  await ctx.react('üëè')
  await ctx.reply('–ö—Ä—É—Ç–æ!')
})

bot.hears('–•–æ—á—É –ø–æ–Ω—è—Ç—å –≤—Ä–µ–¥ –∫—É—Ä–µ–Ω–∏—è!', async (ctx) => {
  await ctx.react('ü§ù')
  await ctx.reply('–¢—É—Ç —Ç—ã –Ω–∞–π–¥–µ—à—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ: [—Å–∞–π—Ç –í–û–ó](https://www.who.int/ru/campaigns/connecting-the-world-to-combat-coronavirus/healthyathome/healthyathome---quitting-tobacco)',
    {
      parse_mode: "MarkdownV2",
      disable_web_page_preview: true
    }
  )
})

bot.hears('–ü–æ –ø—Ä–∏–∫–æ–ª—É –ø—Ä–æ—Å—Ç–æ!', async (smoke) => {
  await smoke.react('ü§°')
  await smoke.reply('–° –∫—É—Ä–µ–Ω–∏–µ–º —à—É—Ç–∫–∏ –ø–ª–æ—Ö–∏! –ö—É—Ä—è—Ç –ª–æ—Ö–∏!')
})


bot.on(":voice", async (ctx) => {
  await ctx.reply("–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–∞—Å—Å–∫–∞–∑–∞–ª!");
});

bot.on(":media", async (ctx) => {
  await ctx.reply("–í–ø–µ—á–∞—Ç–ª—è—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç!");
});

bot.on("::url", async (ctx) => {
  await ctx.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ —Å—Å—ã–ª–æ—á–∫—É!");
});

bot.command(["sayhi", "say_hello", "hello", "say_zdravo"], async (ctx) => {
  await ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç, –ø—Ä–∏–≤–µ—Ç! –¢—ã –∫—Å—Ç–∞—Ç–∏ –≤ –∫—É—Ä—Å–µ, —á—Ç–æ –ø–æ–∫–∞ —Ç—ã —Å–æ –º–Ω–æ–π –∑–¥–æ—Ä–æ–≤–∞–ª—Å—è –Ω–∞ –ó–µ–º–ª–µ –æ—Ç –∫—É—Ä–µ–Ω–∏—è —É–º–µ—Ä 1 —á–µ–ª–æ–≤–µ–∫?! –ù–µ—Ç?! –ù—É –ø—Ä–∏–≤–µ—Ç!"
  );
});

bot.hears([/—á–∏–ø—Å—ã/, /–º–æ—Ä–æ–∂–µ–Ω–æ–µ/, /–∫–æ–ª—É/], async (ctx) => {
  await ctx.reply("–ë—É–¥–µ—à—å –æ—á–µ–Ω, –æ—á–µ–Ω—å, _–∂–∏—Ä–Ω—ã–º_ *–ø—Ä–∏–∂–∏—Ä–Ω—ã–º*", {
    parse_mode: "MarkdownV2",
  });
});

bot.hears(["–í–æ—Ä–æ–Ω–∞", "–≤–æ—Ä–æ–Ω–∞"], async (ctx) => {
  await ctx.reply(" —Å–µ–ª–∞ –Ω–∞ –¥–µ—Ä–µ–≤–æ!");
});

bot.hears(["–í–æ—Ä–æ–±—É—à–µ–∫", "–≤–æ—Ä–æ–±—É—à–µ–∫"], async (ctx) => {
  await ctx.reply(" —Å–µ–ª –Ω–∞ –≤–µ—Ç–æ—á–∫—É!");
});

bot.hears([/—Ö—É–π/, /–ø–∏–∑–¥–∞/, /–±–ª—è—Ç—å/, /–ø–∏–¥–æ—Ä/], async (ctx) => {
  await ctx.reply("–ò —ç—Ç–∏–º —Ä—Ç–æ–º —Ç—ã —Ü–µ–ª—É–µ—à—å –º–∞–º—É?!");
});

bot.hears("ID", async (ctx) => {
  await ctx.reply(`–í–∞—à ID: ${ctx.from.id}`);
  console.log(ctx.from.id);
});

bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`Error ehile handling update ${ctx.update.update_id}: `);
  const e = err.error;

  if (e instanceof GrammyError) {
    console.error("Error in request: ", e.description);
  } else if (e instanceof HttpError) {
    console.error("Could not contact telega: ", e);
  } else {
    console.error("Unknown error: ", e);
  }
});

bot.start();
